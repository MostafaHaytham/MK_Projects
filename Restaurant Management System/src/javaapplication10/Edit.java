/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication10;

import java.awt.Toolkit;
import java.awt.Color;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author bb
 */
public class Edit extends javax.swing.JFrame {

    java.sql.Connection con = null;
    ResultSet rs = null;
    Statement st;
    String path = System.getProperty("user.dir");
    String conn = "jdbc:mysql://localhost:3306/tasberadb" + "?useUnicode=yes&characterEncoding=UTF-8";

    public Edit() {
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getClassLoader().getResource("images/logo2.jpg")));
        this.getContentPane().setBackground(Color.WHITE);
        ((JLabel) this.jComboBox1.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
        ((JLabel) this.jComboBox2.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
        ((JLabel) this.jComboBox3.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
        ((JLabel) this.jComboBox4.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
        ((JLabel) this.jComboBox5.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
        ((JLabel) this.jComboBox6.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
        ((JLabel) this.jComboBox7.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
        ((JLabel) this.jComboBox8.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
        ((JLabel) this.jComboBox9.getRenderer()).setHorizontalAlignment(JLabel.RIGHT);
        this.jPanel1.setBackground(Color.LIGHT_GRAY);
        this.jPanel2.setBackground(Color.LIGHT_GRAY);
        this.jPanel3.setBackground(Color.LIGHT_GRAY);
        try {
            con = DriverManager.getConnection(conn, "root", "");
            st = (Statement) con.createStatement();
            rs = st.executeQuery("SELECT * FROM CLIENTS ");
            this.jComboBox3.addItem("اضافة عميل جديد");
            while (rs.next()) {
                this.jComboBox3.addItem(rs.getString("CLIENTPHONE"));
            }
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox5 = new javax.swing.JComboBox<String>();
        jComboBox7 = new javax.swing.JComboBox<String>();
        jLabel16 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<String>();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<String>();
        jTextField4 = new javax.swing.JTextField();
        jComboBox6 = new javax.swing.JComboBox<String>();
        jComboBox8 = new javax.swing.JComboBox<String>();
        jComboBox9 = new javax.swing.JComboBox<String>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox<String>();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1000, 700));
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setPreferredSize(new java.awt.Dimension(1000, 700));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("PT Bold Heading", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(251, 240, 2));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("الإعدادات");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(400, 20, 183, 39);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "اضافة فئة في القائمة", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel1.setLayout(null);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "اضافة فئة جديدة", "الكل", "دليفري", "كاترنج", "اوبر ايتس", "اطلب" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(10, 80, 210, 34);

        jLabel3.setText("اسم الفئة:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(230, 190, 70, 30);

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel1.add(jTextField1);
        jTextField1.setBounds(10, 190, 210, 31);

        jLabel4.setText("قائمة الفئة");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(230, 80, 49, 34);

        jLabel5.setText("اسم القائمة:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(230, 250, 68, 20);

        jButton3.setForeground(new java.awt.Color(59, 24, 2));
        jButton3.setText("حذف");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(10, 360, 86, 50);

        jButton2.setForeground(new java.awt.Color(59, 24, 2));
        jButton2.setText("تعديل");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(110, 360, 80, 50);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "الكل", "دليفري", "كاترنج", "اوبر ايتس", "اطلب" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox5);
        jComboBox5.setBounds(10, 250, 210, 32);

        jComboBox7.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jPanel1.add(jComboBox7);
        jComboBox7.setBounds(10, 120, 210, 34);

        jLabel16.setText("الفئة المسجلة");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(230, 120, 67, 34);

        jButton1.setForeground(new java.awt.Color(59, 24, 2));
        jButton1.setText("اضافة");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(210, 360, 80, 50);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(680, 110, 300, 420);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "اضافة منتج في الفئة", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel2.setMinimumSize(new java.awt.Dimension(360, 430));
        jPanel2.setLayout(null);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "اضافة منتج جديد", "الكل", "دليفري", "كاترنج", "اوبر ايتس", "اطلب" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox2);
        jComboBox2.setBounds(10, 50, 240, 34);

        jLabel7.setText("اسم المنتج:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(260, 210, 73, 34);

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel2.add(jTextField3);
        jTextField3.setBounds(10, 210, 240, 32);

        jLabel8.setText("قائمة الفئة");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(260, 50, 85, 34);

        jLabel9.setText("قائمة الفئة:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(260, 250, 78, 30);

        jButton6.setForeground(new java.awt.Color(59, 24, 2));
        jButton6.setText("حذف");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);
        jButton6.setBounds(20, 360, 82, 48);

        jButton4.setForeground(new java.awt.Color(59, 24, 2));
        jButton4.setText("اضافة");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(250, 360, 88, 48);

        jLabel14.setText("سعر المنتج:");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(260, 310, 73, 30);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "الكل", "دليفري", "كاترنج", "اوبر ايتس", "اطلب" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox4);
        jComboBox4.setBounds(10, 250, 240, 27);

        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel2.add(jTextField4);
        jTextField4.setBounds(10, 310, 240, 28);

        jComboBox6.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox6);
        jComboBox6.setBounds(10, 90, 240, 34);

        jPanel2.add(jComboBox8);
        jComboBox8.setBounds(10, 280, 240, 27);

        jComboBox9.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jComboBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox9ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox9);
        jComboBox9.setBounds(10, 130, 240, 34);

        jLabel17.setText("فئة المنتج:");
        jPanel2.add(jLabel17);
        jLabel17.setBounds(260, 280, 78, 30);

        jLabel18.setText("المنتجات المسجلة");
        jPanel2.add(jLabel18);
        jLabel18.setBounds(260, 130, 85, 34);

        jLabel19.setText("فئة المنتج");
        jPanel2.add(jLabel19);
        jLabel19.setBounds(260, 90, 47, 34);

        jButton5.setForeground(new java.awt.Color(59, 24, 2));
        jButton5.setText("تعديل");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(130, 360, 88, 48);

        jTextField8.setEditable(false);
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel2.add(jTextField8);
        jTextField8.setBounds(10, 170, 240, 28);

        jLabel20.setText("سعر المنتج الحالي:");
        jPanel2.add(jLabel20);
        jLabel20.setBounds(250, 170, 100, 30);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(320, 110, 350, 420);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "اضافة عميل", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel3.setLayout(null);

        jPanel3.add(jComboBox3);
        jComboBox3.setBounds(10, 70, 190, 34);

        jLabel11.setText("اسم العميل:");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(220, 160, 68, 34);

        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel3.add(jTextField5);
        jTextField5.setBounds(10, 160, 190, 28);

        jLabel12.setText("العملاء المسجلين");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(210, 70, 82, 34);

        jLabel13.setText("عنوان العميل:");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(220, 220, 70, 34);

        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel3.add(jTextField6);
        jTextField6.setBounds(10, 220, 190, 31);

        jButton8.setForeground(new java.awt.Color(59, 24, 2));
        jButton8.setText("حذف");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton8);
        jButton8.setBounds(10, 360, 80, 48);

        jButton7.setForeground(new java.awt.Color(59, 24, 2));
        jButton7.setText("اضافة");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton7);
        jButton7.setBounds(210, 360, 80, 48);

        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel3.add(jTextField7);
        jTextField7.setBounds(10, 280, 190, 30);

        jLabel15.setText("رقم العميل:");
        jPanel3.add(jLabel15);
        jLabel15.setBounds(220, 280, 66, 34);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(10, 110, 300, 420);

        jButton9.setForeground(new java.awt.Color(59, 24, 2));
        jButton9.setText("عودة إلي القائمة الرئيسية");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9);
        jButton9.setBounds(390, 590, 190, 56);

        jPanel4.setBackground(new java.awt.Color(101, 23, 13));
        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 0, 1090, 750);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String categoryName = "";
        if (this.jComboBox7.getItemCount() > 0) {
            categoryName = this.jComboBox7.getSelectedItem().toString();
        }
        String categoryParent = this.jComboBox1.getSelectedItem().toString();
        int selection = this.jComboBox1.getSelectedIndex();
        if (selection != 0) {
            try {
                con = DriverManager.getConnection(conn, "root", "");
                st = (Statement) con.createStatement();
                rs = st.executeQuery("SELECT * FROM MENUCATEGORIES WHERE CATEGORYNAME='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                String newCategoryName = this.jTextField1.getText();
                String newCategoryParent = this.jComboBox5.getSelectedItem().toString();
                if (rs.next()) {
                    int dialogResult = JOptionPane.showConfirmDialog(null, "هل تريد تعديل هذا العنوان؟");
                    if (dialogResult == JOptionPane.YES_OPTION) {
                        st = (Statement) con.createStatement();
                        st.execute("UPDATE MENUCATEGORIES SET CATEGORYNAME='" + newCategoryName + "',CATEGORYPARENT='" + newCategoryParent
                                + "' WHERE CATEGORYNAME='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                        JOptionPane.showMessageDialog(null, "تم تعديل العنوان من القائمة بنجاح", "نجاح", JOptionPane.INFORMATION_MESSAGE);
                        st = (Statement) con.createStatement();
                        st.execute("UPDATE ITEMS SET ITEMCATEGORY='" + newCategoryName + "',CATEGORYPARENT='" + newCategoryParent
                                + "' WHERE ITEMCATEGORY='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                        this.jTextField1.setText("");
                        this.jComboBox1.setSelectedIndex(0);
                        this.jComboBox2.setSelectedIndex(0);
                        this.jComboBox4.setSelectedIndex(0);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "لم يتم حذف العنوان", "خطا", JOptionPane.INFORMATION_MESSAGE);

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "لم يتم حذف العنوان", "خطا", JOptionPane.INFORMATION_MESSAGE);
                System.out.println(ex.toString());
            }

        } else {
            JOptionPane.showMessageDialog(null, "يجب اختيار عنوان من القائمة", "خطا", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String itemName = this.jTextField3.getText();
        String itemPrice = this.jTextField4.getText();
        String categoryName = this.jComboBox8.getSelectedItem().toString();
        String categoryParent = this.jComboBox4.getSelectedItem().toString();
        double itemPrice2 = 0;
        boolean priceIsNumber = true;
        try {
            itemPrice2 = Double.parseDouble(itemPrice);
        } catch (Exception ex) {
            priceIsNumber = false;
        }
        int selection = this.jComboBox2.getSelectedIndex();
        if (selection == 0) {
            if (itemName.equals("") || categoryName.equals("") || categoryParent.equals("") || !priceIsNumber) {
                JOptionPane.showMessageDialog(null, "يوجد خطا بالأسم او السعر", "خطا", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    con = DriverManager.getConnection(conn, "root", "");
                    st = (Statement) con.createStatement();
                    rs = st.executeQuery("SELECT * FROM ITEMS WHERE ITEMNAME='" + itemName + "' AND ITEMCATEGORY='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                    if (!rs.next()) {
                        st = (Statement) con.createStatement();
                        st.execute("INSERT INTO ITEMS(ITEMNAME, ITEMCATEGORY, CATEGORYPARENT, ITEMPRICE ) "
                                + "VALUES('" + itemName + "','" + categoryName + "','" + categoryParent + "'," + itemPrice2 + ")");
                        this.jTextField3.setText("");
                        this.jTextField4.setText("");
                        JOptionPane.showMessageDialog(null, "تم اضافة المنتج للقائمة بنجاح", "نجاح", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "هذا المنتج مسجلة من قبل", "فشل العملية", JOptionPane.INFORMATION_MESSAGE);

                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "لم يتم اضافة المنتج", "خطا", JOptionPane.INFORMATION_MESSAGE);
                    Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "يجب اختيار ادخال منتج جديد من القائمة", "خطا", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String clientName = this.jTextField5.getText();
        String clientAddress = this.jTextField6.getText();
        String clientPhone = this.jTextField7.getText();
        int selection = this.jComboBox3.getSelectedIndex();
        if (selection == 0) {
            if (clientName.equals("") || clientAddress.equals("") || clientPhone.equals("")) {
                JOptionPane.showMessageDialog(null, "يجب ادخال البيانات بالكامل", "خطا", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
//                  Class.forName("org.apache.derby.jdbc.ClientDriver");
//                  con = DriverManager.getConnection(connect + path + "\\Databases\\TasberaDB", "root", "1234");
                    con = DriverManager.getConnection(conn, "root", "");
                    st = (Statement) con.createStatement();
                    st.execute("INSERT INTO CLIENTS(CLIENTNAME, CLIENTADDRESS , CLIENTPHONE) "
                            + "VALUES('" + clientName + "','" + clientAddress + "','" + clientPhone + "')");
                    JOptionPane.showMessageDialog(null, "تم اضافة العميل بنجاح", "نجاح", JOptionPane.INFORMATION_MESSAGE);
                    this.jTextField5.setText("");
                    this.jTextField6.setText("");
                    this.jTextField7.setText("");
                    st = (Statement) con.createStatement();
                    rs = st.executeQuery("SELECT * FROM CLIENTS");
                    this.jComboBox3.removeAllItems();
                    this.jComboBox3.addItem("اضافة عميل جديد");
                    while (rs.next()) {
                        this.jComboBox3.addItem(rs.getString("CLIENTPHONE"));
                    }

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "لم يتم اضاقة العميل", "خطا", JOptionPane.INFORMATION_MESSAGE);
                    Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        } else {
            JOptionPane.showMessageDialog(null, "يجب اختيار ادخال عميل جديد من القائمة", "خطا", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        Main m = new Main();
        m.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        String categoryName = this.jComboBox7.getSelectedItem().toString();
        String categoryParent = this.jComboBox1.getSelectedItem().toString();
        int selection = this.jComboBox1.getSelectedIndex();
        if (selection != 0) {
            try {
                con = DriverManager.getConnection(conn, "root", "");
                st = (Statement) con.createStatement();
                rs = st.executeQuery("SELECT * FROM MENUCATEGORIES WHERE CATEGORYNAME='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                if (rs.next()) {
                    int dialogResult = JOptionPane.showConfirmDialog(null, "هل تريد حذف هذا العنوان؟");
                    if (dialogResult == JOptionPane.YES_OPTION) {
                        st = (Statement) con.createStatement();
                        st.execute("DELETE FROM MENUCATEGORIES WHERE CATEGORYNAME='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                        JOptionPane.showMessageDialog(null, "تم حذف العنوان من القائمة بنجاح", "نجاح", JOptionPane.INFORMATION_MESSAGE);
                        st = (Statement) con.createStatement();
                        st.execute("DELETE FROM ITEMS WHERE ITEMCATEGORY='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                        this.jTextField1.setText("");
                        this.jComboBox1.setSelectedIndex(0);
                        this.jComboBox2.setSelectedIndex(0);
                        this.jComboBox4.setSelectedIndex(0);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "لم يتم حذف العنوان", "خطا", JOptionPane.INFORMATION_MESSAGE);

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "لم يتم حذف العنوان", "خطا", JOptionPane.INFORMATION_MESSAGE);
                System.out.println(ex.toString());
            }

        } else {
            JOptionPane.showMessageDialog(null, "يجب اختيار عنوان من القائمة", "خطا", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int selection = this.jComboBox2.getSelectedIndex();
        String categoryParent = this.jComboBox2.getSelectedItem().toString();
        String categoryName = this.jComboBox6.getSelectedItem().toString();
        String itemName = "";
        if (this.jComboBox9.getItemCount() > 0) {
            itemName = this.jComboBox9.getSelectedItem().toString();
        }
        if (selection != 0) {
            if (categoryParent.equals("") || categoryName.equals("") || itemName.equals("")) {
                JOptionPane.showMessageDialog(null, "لم يتم اختيار المنتج", "خطا", JOptionPane.INFORMATION_MESSAGE);

            } else {
                try {
                    int dialogResult = JOptionPane.showConfirmDialog(null, "هل تريد حذف هذا المنتج؟");
                    if (dialogResult == JOptionPane.YES_OPTION) {
                        con = DriverManager.getConnection(conn, "root", "");
                        st = (Statement) con.createStatement();
                        System.out.println("ITEMNAME='" + itemName + "' AND ITEMCATEGORY='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent);
                        st.execute("DELETE FROM ITEMS WHERE ITEMNAME='" + itemName + "' AND ITEMCATEGORY='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                        JOptionPane.showMessageDialog(null, "تم حذف المنتج من القائمة بنجاح", "نجاح", JOptionPane.INFORMATION_MESSAGE);
                        this.jTextField3.setText("");
                        this.jTextField4.setText("");
                        this.jComboBox2.setSelectedIndex(0);
                    }

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "لم يتم حذف المنتج", "خطا", JOptionPane.INFORMATION_MESSAGE);
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "يجب اختيار عنوان من القائمة", "خطا", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int selection = this.jComboBox3.getSelectedIndex();
        String clientPhone = this.jComboBox3.getItemAt(selection);
        if (selection != 0) {
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null, "هل تريد حذف هذا العميل؟");
                if (dialogResult == JOptionPane.YES_OPTION) {
                    con = DriverManager.getConnection(conn, "root", "");
                    st = (Statement) con.createStatement();
                    st.execute("DELETE FROM CLIENTS WHERE CLIENTPHONE='" + clientPhone + "'");
                    JOptionPane.showMessageDialog(null, "تم حذف العميل من القائمة بنجاح", "نجاح", JOptionPane.INFORMATION_MESSAGE);
                    this.jTextField5.setText("");
                    this.jTextField6.setText("");
                    this.jTextField7.setText("");
                    this.jComboBox3.setSelectedIndex(0);
                    st = (Statement) con.createStatement();
                    rs = st.executeQuery("SELECT * FROM CLIENTS");
                    this.jComboBox3.removeAllItems();
                    this.jComboBox3.addItem("اضافة عميل جديد");
                    while (rs.next()) {
                        this.jComboBox3.addItem(rs.getString("CLIENTPHONE"));
                    }
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "لم يتم حذف العميل", "خطا", JOptionPane.INFORMATION_MESSAGE);
                Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "يجب اختيار عنوان من القائمة", "خطا", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        this.jComboBox9.removeAllItems();
        this.jComboBox6.removeAllItems();
        int selectedIndex = this.jComboBox2.getSelectedIndex();
        String categoryParent = this.jComboBox2.getSelectedItem().toString();
        if (selectedIndex != 0) {
            try {
                con = DriverManager.getConnection(conn, "root", "");
                st = (Statement) con.createStatement();
                rs = st.executeQuery("SELECT * FROM MENUCATEGORIES WHERE CATEGORYPARENT='" + categoryParent + "'");
                ArrayList<String> categories = new ArrayList<String>();
                while (rs.next()) {
                    categories.add(rs.getString("CATEGORYNAME"));

                }
                this.jComboBox6.setModel(new DefaultComboBoxModel(categories.toArray()));
            } catch (SQLException ex) {
                Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        this.jComboBox7.removeAllItems();
        int selectedIndex = this.jComboBox1.getSelectedIndex();
        String categoryParent = this.jComboBox1.getSelectedItem().toString();
        if (selectedIndex > 0) {
            try {
                con = DriverManager.getConnection(conn, "root", "");
                st = (Statement) con.createStatement();
                rs = st.executeQuery("SELECT * FROM MENUCATEGORIES WHERE CATEGORYPARENT='" + categoryParent + "'");
                while (rs.next()) {
                    this.jComboBox7.addItem(rs.getString("CATEGORYNAME"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
        this.jComboBox8.removeAllItems();
        String categoryParent = this.jComboBox4.getSelectedItem().toString();
        try {
            con = DriverManager.getConnection(conn, "root", "");
            st = (Statement) con.createStatement();
            rs = st.executeQuery("SELECT * FROM MENUCATEGORIES WHERE CATEGORYPARENT='" + categoryParent + "'");
            while (rs.next()) {
                this.jComboBox8.addItem(rs.getString("CATEGORYNAME"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed

        // TODO add your handling code here:
        this.jComboBox9.removeAllItems();
        if (this.jComboBox6.getItemCount() > 0) {
            String categoryName = this.jComboBox6.getSelectedItem().toString();
            String categoryParent = this.jComboBox2.getSelectedItem().toString();
            try {
                st = (Statement) con.createStatement();
                rs = st.executeQuery("SELECT * FROM ITEMS WHERE ITEMCATEGORY='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                ArrayList<String> items = new ArrayList<String>();
                while (rs.next()) {
                    items.add(rs.getString("ITEMNAME"));

                }
                this.jComboBox9.setModel(new DefaultComboBoxModel(items.toArray()));

            } catch (SQLException ex) {
                Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String categoryName = this.jTextField1.getText();
        String categoryParent = this.jComboBox5.getSelectedItem().toString();
        int selection = this.jComboBox1.getSelectedIndex();
        if (selection == 0) {
            if (categoryName.equals("") || categoryParent.equals("")) {
                JOptionPane.showMessageDialog(null, "يوجد خطا بالبيانات ", "خطا", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    con = DriverManager.getConnection(conn, "root", "");
                    st = (Statement) con.createStatement();
                    rs = st.executeQuery("SELECT * FROM MENUCATEGORIES WHERE CATEGORYNAME='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                    if (!rs.next()) {
                        st = (Statement) con.createStatement();
                        st.execute("INSERT INTO MENUCATEGORIES(CATEGORYNAME, CATEGORYPARENT ) "
                                + "VALUES('" + categoryName + "','" + categoryParent + "')");
                        JOptionPane.showMessageDialog(null, "تم اضافة العنوان من القائمة بنجاح", "نجاح", JOptionPane.INFORMATION_MESSAGE);
                        st = (Statement) con.createStatement();
                        this.jTextField1.setText("");
                        this.jComboBox1.setSelectedIndex(0);
                        this.jComboBox2.setSelectedIndex(0);
                        this.jComboBox4.setSelectedIndex(0);
                    } else {
                        JOptionPane.showMessageDialog(null, "هذا العنوان مسجل من قبل", "خطا", JOptionPane.INFORMATION_MESSAGE);

                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "لم يتم حذف العنوان", "خطا", JOptionPane.INFORMATION_MESSAGE);
                    System.out.println(ex.toString());
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "يجب اختيار عنوان من القائمة", "خطا", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int selection = this.jComboBox2.getSelectedIndex();
        String categoryParent = this.jComboBox2.getSelectedItem().toString();
        String categoryName = ";";
        if (this.jComboBox6.getItemCount() > 0) {
            categoryName = this.jComboBox6.getSelectedItem().toString();
        }
        String itemName = "";
        if (this.jComboBox9.getItemCount() > 0) {
            itemName = this.jComboBox9.getSelectedItem().toString();
        }

        String newItemName = this.jTextField3.getText();
        if (newItemName.equals("")) {
            newItemName = this.jComboBox9.getSelectedItem().toString();
        }
        String newItemPrice = this.jTextField4.getText();
        String newCategoryName = "";
        if (this.jComboBox8.getItemCount() > 0) {
            newCategoryName = this.jComboBox8.getSelectedItem().toString();
        }
        String newCategoryParent = this.jComboBox4.getSelectedItem().toString();
        double newItemPrice2 = 0;
        boolean priceIsNumber = true;
        try {
            newItemPrice2 = Double.parseDouble(newItemPrice);
        } catch (Exception ex) {
            priceIsNumber = false;
        }
        if (selection != 0) {
            if (itemName.equals("") || categoryName.equals("") || categoryParent.equals("") || !priceIsNumber
                    || newItemName.equals("") || newCategoryName.equals("") || newCategoryParent.equals("")) {
                JOptionPane.showMessageDialog(null, "يوجد خطا بالأسم او السعر", "خطا", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    con = DriverManager.getConnection(conn, "root", "");
                    st = (Statement) con.createStatement();
                    rs = st.executeQuery("SELECT * FROM ITEMS WHERE ITEMNAME='" + itemName + "' AND ITEMCATEGORY='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                    if (rs.next()) {
                        int dialogResult = JOptionPane.showConfirmDialog(null, "هل تريد تعديل هذا المنتج؟");
                        if (dialogResult == JOptionPane.YES_OPTION) {
                            st = (Statement) con.createStatement();
                            st.execute("UPDATE ITEMS SET ITEMNAME='" + newItemName + "',ITEMCATEGORY='" + newCategoryName
                                    + "',CATEGORYPARENT='" + newCategoryParent + "',ITEMPRICE=" + newItemPrice2
                                    + " WHERE ITEMNAME='" + itemName + "' AND ITEMCATEGORY='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "'");
                            this.jTextField3.setText("");
                            this.jTextField4.setText("");
                            this.jComboBox2.setSelectedItem(0);
                            JOptionPane.showMessageDialog(null, "تم تعديل المنتج للقائمة بنجاح", "نجاح", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "هذا المنتج غير مسجة من قبل", "فشل العملية", JOptionPane.INFORMATION_MESSAGE);

                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "لم يتم تعديل المنتج", "خطا", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "يجب اختيار عنوان من القائمة", "خطا", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox9ActionPerformed
        // TODO add your handling code here:
        this.jTextField8.setText("");
        if (this.jComboBox9.getItemCount() > 0) {
            String categoryName = this.jComboBox6.getSelectedItem().toString();
            String categoryParent = this.jComboBox2.getSelectedItem().toString();
            String itemName = this.jComboBox9.getSelectedItem().toString();
            try {
                st = (Statement) con.createStatement();
                rs = st.executeQuery("SELECT * FROM ITEMS WHERE ITEMCATEGORY='" + categoryName + "' AND CATEGORYPARENT='" + categoryParent + "' AND ITEMNAME='" + itemName + "'");
                if (rs.next()) {
                    this.jTextField8.setText(rs.getString("ITEMPRICE"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBox9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edit.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edit.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edit.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edit.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edit().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
